name: $(version).$(Build.BuildId)$(buildPipelineSuffix)

pr:
  branches:
    include:
    - main

pool:
  vmImage: ubuntu-latest

steps:
  - script: |
      echo "##vso[build.addbuildtag]version=$(version).$(Build.BuildId)$(buildPipelineSuffix)"
    displayName: 'Set Build Instance Number'

  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install Node.js'

  - task: JFrogNpm@1
    inputs:
      command: 'install'
      artifactoryConnection: 'girocicd.jfrog.io.v2'
      sourceRepo: 'dailyweb-npm'
      collectBuildInfo: true
      threads: '1'
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
      arguments: '--legacy-peer-deps'
    displayName: 'npm install'

  - script: npm run lint
    displayName: 'npm run lint'

  - script: npm run test
    displayName: 'npm run test'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml

  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'GGGiro SonarCloud'
      organization: 'gggiro'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'GGGiro_demo-nodejs'
      cliProjectName: 'demo-nodejs'
      cliSources: '.'
      extraProperties: |
        sonar.javascript.lcov.reportPaths=$(System.DefaultWorkingDirectory)/coverage/lcov.info
    displayName: 'SonarCloud Setup'
    
  - task: SonarCloudAnalyze@1
    displayName: 'SonarCloud Analyze'

  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'
    displayName: 'SonarCloud Publish Report'
